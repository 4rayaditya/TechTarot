:root {
    --bg-0: #03040a;
    --bg-1: #071226;
    --accent: #7fe9e1;
    /* slightly stronger cyan */
    --accent-2: #46d7cf;
    /* bright cyan for highlights */
    --muted: #96a6b6;
    --card: #07101a;
    --card-2: #0c1b2a;
    --glass: rgba(30, 40, 60, 0.28);
}

* {
    box-sizing: border-box
}

html,
body {
    height: 100%;
    margin: 0;
    font-family: 'Georgia', serif;
    background: var(--bg-0);
    color: var(--accent)
}

.topbar {
    background: transparent;
    color: var(--muted);
    padding: 8px 12px;
    font-size: 13px;
    text-align: center;
    border-bottom: 1px solid rgba(255, 255, 255, 0.02);
    z-index: 4;
    position: relative
}

.hero {
    display: flex;
    align-items: center;
    justify-content: center;
    min-height: calc(100vh - 72px);
    position: relative;
    overflow: hidden
}

#starfield {
    position: fixed;
    left: 0;
    top: 0;
    right: 0;
    bottom: 0;
    z-index: 0
}

.nebula {
    position: fixed;
    left: 0;
    top: 0;
    right: 0;
    bottom: 0;
    pointer-events: none;
    z-index: 1;
    mix-blend-mode: screen;
    opacity: 0.55;
    transform: translateZ(0)
}

/* Floating typing text in top-left */
.floating-text {
    position: fixed;
    left: 18px;
    top: 18px;
    z-index: 6;
    color: var(--accent);
    font-family: 'Courier New', monospace;
    font-size: 13px;
    background: linear-gradient(180deg, rgba(8, 12, 20, 0.55), rgba(6, 8, 14, 0.45));
    padding: 8px 10px;
    border-radius: 8px;
    border: 1px solid rgba(70, 100, 120, 0.06);
    box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.02), 0 6px 20px rgba(3, 8, 20, 0.6);
    backdrop-filter: blur(6px) saturate(0.9);
}

.floating-text .cursor {
    display: inline-block;
    margin-left: 6px;
    opacity: 0.9;
    animation: blink 1s steps(2, start) infinite;
}

@keyframes blink {
    50% {
        opacity: 0
    }
}

.nebula-1 {
    background: radial-gradient(40% 30% at 20% 30%, rgba(120, 60, 200, 0.18), transparent 10%), radial-gradient(30% 20% at 70% 60%, rgba(60, 180, 200, 0.12), transparent 12%)
}

.nebula-2 {
    background: radial-gradient(45% 30% at 80% 30%, rgba(20, 140, 200, 0.12), transparent 10%), radial-gradient(25% 18% at 30% 70%, rgba(200, 80, 150, 0.10), transparent 10%);
    filter: blur(10px);
    opacity: 0.6
}

.container {
    max-width: 980px;
    margin: 0 auto;
    text-align: center;
    padding: 48px;
    position: relative;
    z-index: 5
}

/* Floating control panel on the right so the center stays clear for visuals */
.control-panel {
    position: fixed;
    right: 18px;
    top: 80px;
    width: 320px;
    max-width: calc(100% - 60px);
    z-index: 10;
    pointer-events: auto;
}

.control-panel .panel-inner {
    background: linear-gradient(180deg, rgba(12, 18, 28, 0.62), rgba(8, 12, 18, 0.5));
    border: 1px solid rgba(40, 60, 80, 0.14);
    padding: 14px;
    border-radius: 12px;
    box-shadow: 0 10px 36px rgba(2, 8, 20, 0.65), inset 0 1px 0 rgba(255, 255, 255, 0.02);
}

.panel-actions {
    display: flex;
    gap: 8px;
    align-items: center;
    margin-top: 8px
}

/* Electric neon border wrapper (use by adding class `electric-card` to a container)
   - creates a glowing, slightly jagged animated border around the element
   - intended to be placed around the tone selector area in the control panel
*/
.electric-card {
    position: relative;
    border-radius: 12px;
    padding: 10px;
    background: linear-gradient(180deg, rgba(10, 16, 22, 0.6), rgba(6, 10, 14, 0.45));
    box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.02);
    overflow: visible;
}

.electric-card .electric-inner {
    position: relative;
    border-radius: 8px;
    padding: 10px;
    z-index: 2;
}

/* make dropdown more visible */
#modeSelect {
    background: linear-gradient(180deg, rgba(10, 20, 28, 0.85), rgba(8, 12, 18, 0.85));
    color: #cffff8;
    border: 1px solid rgba(120, 240, 220, 0.12);
    padding: 8px 10px;
    border-radius: 8px;
    width: 100%;
    box-shadow: 0 6px 18px rgba(2, 8, 20, 0.6);
}

/* primary button */
.btn.primary {
    background: linear-gradient(180deg, #7df9ff, #46d7cf);
    color: #022;
    border: none;
    padding: 10px 14px;
    border-radius: 10px;
    font-weight: 700;
    box-shadow: 0 8px 20px rgba(70, 220, 200, 0.12);
}

.mode-container.electric-card.hidden {
    display: none;
}

.btn.hidden {
    display: none !important;
}

.intro-area {
    margin-bottom: 10px;
}

/* animated glow layer */
.electric-card::before {
    content: "";
    position: absolute;
    left: -8px;
    right: -8px;
    top: -8px;
    bottom: -8px;
    z-index: 1;
    border-radius: 16px;
    background: conic-gradient(from 120deg, rgba(70, 240, 230, 0.95), rgba(180, 220, 255, 0.85), rgba(60, 200, 190, 0.95), rgba(140, 240, 210, 0.9));
    filter: blur(8px) saturate(1.4);
    opacity: 0.85;
    mix-blend-mode: screen;
    animation: electric-rotate 2.8s linear infinite, electric-flicker 3.6s linear infinite;
}

/* subtle inner stroke for crispness */
.electric-card::after {
    content: "";
    position: absolute;
    left: -6px;
    right: -6px;
    top: -6px;
    bottom: -6px;
    z-index: 3;
    border-radius: 14px;
    pointer-events: none;
    background: radial-gradient(ellipse at 10% 10%, rgba(255, 255, 255, 0.06), transparent 12%),
        radial-gradient(ellipse at 90% 90%, rgba(120, 240, 230, 0.06), transparent 18%);
    box-shadow: 0 0 18px rgba(80, 220, 200, 0.12) inset;
    mix-blend-mode: screen;
}

@keyframes electric-rotate {
    from {
        transform: rotate(0deg);
    }

    to {
        transform: rotate(360deg);
    }
}

/* randomized flicker to make the border feel alive */
@keyframes electric-flicker {
    0% {
        opacity: 0.9;
        filter: blur(7px) saturate(1.4);
    }

    10% {
        opacity: 1;
        filter: blur(5px) saturate(1.6);
    }

    20% {
        opacity: 0.8;
        filter: blur(9px) saturate(1.2);
    }

    40% {
        opacity: 0.95;
        filter: blur(6px) saturate(1.5);
    }

    60% {
        opacity: 0.85;
        filter: blur(8px) saturate(1.3);
    }

    100% {
        opacity: 0.9;
        filter: blur(7px) saturate(1.4);
    }
}

/* convenience: apply to existing tone controls by adding .electric-card to .mode-container or similar */
.mode-container.electric-card {
    padding: 10px;
}

/* questionnaire modal inside control panel */
.questionnaire {
    margin-top: 12px;
    display: block;
    gap: 8px;
}

.questionnaire .q-label {
    display: block;
    color: var(--muted);
    font-size: 13px;
    margin-bottom: 8px;
}

.questionnaire input[type="text"],
.questionnaire textarea {
    width: 100%;
    padding: 8px;
    border-radius: 8px;
    border: 1px solid rgba(80, 120, 120, 0.06);
    background: rgba(10, 14, 18, 0.6);
    color: var(--accent);
}

.select-instructions {
    color: var(--muted);
    font-size: 12px;
    margin: 6px 0 10px;
}

.q-actions {
    display: flex;
    gap: 8px;
}

/* fused result modal (small) */
.personality-result {
    margin-top: 12px;
    padding: 12px;
    border-radius: 10px;
    background: linear-gradient(180deg, rgba(8, 12, 18, 0.6), rgba(6, 8, 12, 0.45));
    color: var(--accent-2);
    border: 1px solid rgba(70, 220, 200, 0.06);
}


@media (max-width:900px) {
    .control-panel {
        right: 12px;
        left: 12px;
        top: auto;
        bottom: 14px;
        width: auto
    }
}

.container h1 {
    font-size: clamp(28px, 6vw, 72px);
    line-height: 1;
    margin: 8px 0 8px;
    color: #e8fefb;
    text-shadow: 0 6px 24px rgba(0, 0, 0, 0.6)
}

.subtitle {
    color: var(--muted);
    font-style: italic;
    margin-bottom: 22px
}

.controls {
    display: flex;
    gap: 10px;
    align-items: center;
    justify-content: center;
    margin-bottom: 14px;
    flex-wrap: wrap
}

.mode-container {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    gap: 6px;
    margin-right: 6px;
}

.mode-label {
    font-size: 11px;
    color: var(--muted);
    letter-spacing: 1px;
}

.mode-preview {
    font-size: 12px;
    color: var(--muted);
    background: rgba(255, 255, 255, 0.02);
    padding: 6px 8px;
    border-radius: 6px;
    max-width: 220px;
}

.power-toggle {
    display: inline-flex;
    align-items: center;
    gap: 8px;
    color: var(--muted);
    font-size: 13px;
}

.power-toggle input[type="checkbox"] {
    width: 18px;
    height: 18px;
    accent-color: var(--accent);
}

select {
    appearance: none;
    -webkit-appearance: none;
    background: linear-gradient(180deg, rgba(12, 18, 26, 0.55), rgba(8, 12, 18, 0.42));
    border: 1px solid rgba(60, 100, 110, 0.08);
    color: var(--accent);
    padding: 8px 36px 8px 12px;
    border-radius: 8px;
    background-image: linear-gradient(45deg, transparent 50%, rgba(255, 255, 255, 0.06) 50%), linear-gradient(135deg, rgba(255, 255, 255, 0.06) 50%, transparent 50%), radial-gradient(#0000, #0000);
    background-position: calc(100% - 18px) calc(1em + 2px), calc(100% - 13px) calc(1em + 2px), 0 0;
    background-size: 6px 6px, 6px 6px, 100% 100%;
    background-repeat: no-repeat;
    font-weight: 600;
    box-shadow: 0 4px 14px rgba(3, 8, 18, 0.45) inset;
}

.btn {
    background: linear-gradient(180deg, rgba(70, 120, 130, 0.12), rgba(30, 60, 70, 0.06));
    border: 1px solid rgba(60, 140, 140, 0.08);
    padding: 10px 16px;
    cursor: pointer;
    font-weight: 700;
    letter-spacing: 1.2px;
    color: var(--bg-0);
    color: var(--card-2);
    background-clip: padding-box;
    transition: transform .12s ease, box-shadow .12s ease, background .12s ease;
}

.btn:hover {
    transform: translateY(-3px) scale(1.01);
    box-shadow: 0 12px 30px rgba(20, 40, 60, 0.6);
    border-color: rgba(70, 200, 190, 0.18);
}

.btn.ghost {
    background: transparent;
    border: 1px solid rgba(40, 60, 80, 0.12);
}

.decor {
    width: 160px;
    pointer-events: none;
    opacity: 0.95
}

.decor.left {
    position: absolute;
    left: 18px;
    bottom: 18px;
    z-index: 5
}

.decor.right {
    position: absolute;
    right: 18px;
    top: 18px;
    z-index: 5
}

.unicorn {
    width: 220px;
    filter: drop-shadow(0 8px 28px rgba(0, 0, 0, 0.6))
}

.eye {
    width: 220px;
    opacity: 0.95;
    filter: drop-shadow(0 8px 28px rgba(0, 0, 0, 0.6))
}

.card-area {
    margin-top: 32px
}

/* Orb shader container for orb.html */
.orb-container {
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    width: min(80vmin, 900px);
    height: min(80vmin, 900px);
    z-index: 2;
    pointer-events: none;
    /* allow clicks to pass to UI overlay */
}

.orb-canvas {
    width: 100%;
    height: 100%;
    display: block;
}

.hidden {
    display: none
}

.cards {
    display: flex;
    gap: 16px;
    justify-content: center;
    align-items: flex-start;
    margin: 18px 0;
}

.card {
    width: 240px;
    height: 340px;
    perspective: 1000px
}

.card {
    transform: translateY(10px);
    opacity: 0;
    transition: transform 600ms cubic-bezier(.2, .9, .2, 1), opacity 400ms ease;
    will-change: transform, opacity;
}

/* hover lift for tarot-like feel */
.card:hover {
    transform: translateY(-8px) scale(1.02);
    box-shadow: 0 18px 40px rgba(0, 0, 0, 0.55);
    z-index: 50;
}

/* Spread layout for pulled cards */
.cards-grid.spread {
    display: flex !important;
    gap: 32px;
    justify-content: center;
    align-items: center;
    margin: 36px 0;
}

.cards-grid.spread .card {
    width: 300px;
    height: 420px;
}

/* horizontal long spread */
.cards-grid.long-spread {
    display: flex !important;
    gap: 8px;
    padding: 12px 10px;
    align-items: center;
}

.cards-grid.long-spread .card {
    display: inline-block;
    width: 220px;
    height: 320px;
    flex: 0 0 auto;
}

/* fanned, overlapping row (no scrolling) - apply only in orb UI where this visual is desired */
.orb-ui .cards-grid.fanned {
    display: block !important;
    position: relative;
    height: 360px;
    padding: 56px 8px;
}

.orb-ui .cards-grid.fanned .card {
    position: absolute;
    top: 12px;
    left: 50%;
    transform-origin: bottom center;
    margin-left: -120px;
    /* half card width (updated) */
    transition: transform 420ms cubic-bezier(.2, .9, .2, 1), left 420ms ease, opacity 300ms ease;
}

.orb-ui .cards-grid.fanned .card.enter {
    opacity: 1;
}

.orb-ui .cards-grid.fanned .card:hover {
    transform: translateY(-6px) scale(1.02);
    z-index: 9999
}

.orb-ui .cards-grid.fanned .card.center {
    transform: translateX(-480px) rotate(-3deg)
}

.orb-ui .cards-grid.fanned .card.center-1 {
    transform: translateX(-320px) rotate(-2deg)
}

.orb-ui .cards-grid.fanned .card.center-2 {
    transform: translateX(-160px) rotate(-1deg)
}

.orb-ui .cards-grid.fanned .card.center-3 {
    transform: translateX(160px) rotate(1deg)
}

.orb-ui .cards-grid.fanned .card.center-4 {
    transform: translateX(320px) rotate(2deg)
}

/* selected card animation: pop out and flip to reveal */
.card.selected {
    transform: translateY(-60px) scale(1.08) !important;
    z-index: 99999 !important;
}

.card.selected .inner {
    transform: rotateY(180deg)
}

.select-hint {
    text-align: center;
    color: var(--muted);
    margin-top: 8px;
    font-size: 14px;
}

/* ornate tarot back design */
.card .front,
.card .back {
    border-radius: 12px;
    box-shadow: 0 8px 22px rgba(3, 6, 10, 0.6), inset 0 1px 0 rgba(255, 255, 255, 0.02);
}

.card .front {
    background-size: 18px 18px, cover;
    color: rgba(220, 255, 250, 0.95);
}

/* ornate back pattern */
/* ornate back pattern */

/* back face container (art will fill this) */
.card .back {
    transform: rotateY(180deg);
    color: var(--muted);
    padding: 0;
    font-size: 14px;
    display: block;
    border-radius: 12px;
    overflow: hidden;
}

/* decorative frame flourish using pseudo-element */
.card .back::before {
    content: '';
    position: absolute;
    left: 8px;
    right: 8px;
    top: 8px;
    bottom: 8px;
    border-radius: 8px;
    pointer-events: none;
    box-shadow: inset 0 0 0 2px rgba(255, 255, 240, 0.03), inset 0 0 24px rgba(70, 30, 50, 0.18);
}

.card .back::after {
    content: '';
    position: absolute;
    left: 32px;
    right: 32px;
    top: 36px;
    bottom: 36px;
    border-radius: 6px;
    background: repeating-linear-gradient(45deg, rgba(255, 255, 255, 0.015) 0 2px, transparent 2px 6px);
    opacity: 0.18;
}


.card.enter {
    transform: translateY(0);
    opacity: 1;
}

.card .inner {
    width: 100%;
    height: 100%;
    position: relative;
    transition: transform .75s;
    transform-style: preserve-3d;
    cursor: pointer
}

.card.flipped .inner {
    transform: rotateY(180deg)
}

.card .front,
.card .back {
    position: absolute;
    inset: 0;
    border-radius: 12px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 40px;
    padding: 8px
}

/* artwork container inside the back face; fill the whole back */
.card .art {
    position: absolute;
    inset: 0;
    border-radius: 12px;
    background-size: cover;
    background-position: center;
}

/* rotate only the artwork if this card is reversed */
.card.reversed .art {
    transform: rotate(180deg);
}

.card .front {
    background: linear-gradient(180deg, #071726, #04111a);
    color: #bff8f2;
    border: 1px solid rgba(60, 120, 120, 0.04)
}

.card .back {
    transform: rotateY(180deg);
    /* background is set earlier (SVG + subtle patterns) so don't override it here */
    color: var(--muted);
    padding: 12px;
    font-size: 14px;
    flex-direction: column;
    border: 1px solid rgba(40, 70, 80, 0.06)
}

/* Override to put the artwork on the visible face (front) and keep the content on the back */
.card .front {
    background-image: url('../assets/tarotback.png');
    background-size: cover;
    background-position: center;
    color: transparent;
    backface-visibility: hidden;
    -webkit-backface-visibility: hidden;
}

.card .back {
    /* ensure card content face has no artwork behind it */
    background-image: none !important;
    backface-visibility: hidden;
    -webkit-backface-visibility: hidden;
}

.result {
    margin-top: 18px;
    padding: 18px;
    background: linear-gradient(180deg, rgba(12, 18, 28, 0.6), rgba(8, 12, 18, 0.45));
    border-radius: 12px;
    max-width: 720px;
    margin-left: auto;
    margin-right: auto;
    border: 1px solid rgba(40, 70, 80, 0.08);
    box-shadow: 0 10px 30px rgba(2, 8, 20, 0.6)
}

.loading {
    color: var(--muted);
    font-style: italic
}

.error {
    color: #ffb3b3
}

.visual-toggles label {
    font-size: 13px;
    color: var(--muted);
}

.visual-toggles input {
    margin-right: 6px
}


.actions,
.risks {
    text-align: left;
    margin: 8px 0;
    padding-left: 18px
}

.actions li,
.risks li {
    margin: 6px 0
}

.footer {
    position: fixed;
    left: 0;
    right: 0;
    bottom: 0;
    background: transparent;
    padding: 8px 12px;
    border-top: 1px solid rgba(255, 255, 255, 0.02);
    text-align: center;
    font-size: 12px;
    color: var(--muted);
    z-index: 5
}

/* Footer social/layout tweaks */
.socials {
    display: inline-flex;
    align-items: center;
    gap: 12px;
    margin-top: 6px;
}

.creator-credit {
    color: var(--muted);
    font-size: 0.85rem;
    display: inline-flex;
    align-items: center;
    gap: 8px;
}

.creator-link {
    color: var(--accent);
    font-weight: 700;
    text-decoration: none;
}

.creator-link:hover {
    text-decoration: underline;
}

.copy-btn {
    margin-left: 8px
}

@media (max-width:640px) {
    .decor {
        display: none
    }

    .cards {
        gap: 12px;
        padding-bottom: 8px;
    }

    .card {
        width: 110px;
        height: 160px
    }

    .container {
        padding: 20px
    }

    .socials {
        flex-direction: column;
        gap: 6px;
    }
}

/* history and debug styles removed (corresponding DOM removed) */

/* Social icon styles */
.social-link {
    color: var(--accent);
    display: inline-flex;
    align-items: center;
    justify-content: center;
    opacity: 0.9
}

.social-link:hover {
    opacity: 1;
    transform: translateY(-2px)
}

/* tech overlay when viewing a pulled spread */
.tech-overlay::after {
    content: '';
    position: fixed;
    left: 0;
    top: 0;
    right: 0;
    bottom: 0;
    pointer-events: none;
    background-image: radial-gradient(rgba(70, 200, 190, 0.02) 0.5px, transparent 0.5px);
    background-size: 30px 30px;
    mix-blend-mode: overlay;
    z-index: 4;
}

.tech-overlay .panel-inner {
    box-shadow: 0 8px 28px rgba(0, 30, 40, 0.6);
}

/* Full-width cards overlay (index page) */
.cards-overlay {
    position: fixed;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    z-index: 10050;
    display: flex;
    align-items: center;
    justify-content: center;
    background: linear-gradient(180deg, rgba(2, 6, 12, 0.92), rgba(2, 6, 12, 0.96));
    padding: 28px;
    box-sizing: border-box;
}

.cards-overlay.hidden {
    display: none;
}

.cards-overlay .overlay-inner {
    width: 100%;
    max-width: none;
    padding: 8px 12px;
}

.cards-overlay .cards-page.container {
    padding: 12px 18px;
    min-height: 220px;
}

.cards-overlay .cards-grid {
    display: flex;
    gap: 18px;
    align-items: center;
    justify-content: center;
    flex-wrap: nowrap;
    overflow: visible;
}

.cards-overlay .cards-grid.fanned {
    display: block;
    position: relative;
    padding: 28px 8px;
    align-items: center;
    justify-content: center;
    height: auto;
}

.cards-overlay .cards-grid.fanned .card {
    position: absolute;
    top: 6px;
    left: 0;
    transform-origin: bottom left;
    margin: 0;
    transition: transform 420ms cubic-bezier(.2, .9, .2, 1), left 420ms ease, opacity 300ms ease;
    will-change: transform, left;
}

.cards-overlay .cards-grid.fanned .card.enter {
    opacity: 1;
}

.cards-overlay .cards-grid.fanned .card:hover {
    transform: translateY(-14px) scale(1.04) !important;
    z-index: 99999 !important;
    box-shadow: 0 28px 60px rgba(0, 0, 0, 0.6);
}

.cards-overlay .cards-controls {
    display: flex;
    gap: 10px;
    justify-content: center;
    margin-top: 8px;
}

.cards-overlay .btn.ghost {
    position: absolute;
    right: 28px;
    top: 22px;
    color: #cfeff9;
    border-color: rgba(200, 240, 230, 0.12);
}

.cards-overlay .btn {
    background: linear-gradient(180deg, #7fe9e1, #46d7cf);
    color: #022;
    font-weight: 700;
    box-shadow: 0 8px 28px rgba(0, 0, 0, 0.6);
}

/* Standalone cards page: use same fanned overlapping layout so cards.html shows the stacked row */
.cards-page .cards-grid.fanned {
    display: block;
    position: relative;
    padding: 28px 8px;
    align-items: center;
    justify-content: center;
    height: auto;
}

.cards-page .cards-grid.fanned .card {
    position: absolute;
    top: 6px;
    left: 0;
    transform-origin: bottom left;
    margin: 0;
    transition: transform 420ms cubic-bezier(.2, .9, .2, 1), left 420ms ease, opacity 300ms ease;
    will-change: transform, left;
}

.cards-page .cards-grid.fanned .card.enter {
    opacity: 1;
}

.cards-page .cards-grid.fanned .card:hover {
    transform: translateY(-14px) scale(1.04) !important;
    z-index: 99999 !important;
    box-shadow: 0 28px 60px rgba(0, 0, 0, 0.6);
}

/* improve visibility of buttons on standalone cards page */
.cards-page .btn {
    background: linear-gradient(180deg, #7fe9e1, #46d7cf);
    color: #022;
    font-weight: 700;
    box-shadow: 0 8px 28px rgba(0, 0, 0, 0.6);
}